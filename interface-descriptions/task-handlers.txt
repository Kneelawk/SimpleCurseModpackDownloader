How should task handlers work?

TaskHandlers are supposed to be responsible for restarting crashed/zombie killed tasks.

How should a TaskHandler know a task has crashed?
Through events?

The thing with events is that events are called in the same thread as they're fired. And they're all called sequentially.
This means that if i restart a blocking task (one that happens all in the start function) in its event callback, then none
of the other listeners will get called.

Maybe I should use an ExecutionContext to help with this?

This also means that all updated variables in a task should actually be atomic.

Should task handlers have an await sort of thing?

Should task handlers be responsible for adding child tasks to parent tasks? (Just to get that detail out of the way?)

Should task handlers do anything with building tasks?

Should task handlers do anything with their parent task's isBlocked sort of thing?